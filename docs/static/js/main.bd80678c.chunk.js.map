{"version":3,"sources":["tax.svg","github-link.svg","MonthSelect.tsx","TaxSelect.tsx","question.svg","TipIcon.tsx","close.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MonthSelect","props","useEffect","containerEl","document","getElementById","buttonEl","months","console","log","offsetLeft","indEl","parseFloat","style","left","setTimeout","right","clientWidth","offsetWidth","MonthSelectStyle","id","onClick","e","setMonths","className","styled","div","TaxSelect","TaxSelectStyle","htmlFor","type","name","step","min","max","value","tax","onChange","setTax","target","background","TipIcon","height","display","justifyContent","alignItems","data-tip","tip","multiline","src","question","alt","width","HeaderContent","OutputsWrapper","section","OutputsGrid","OutputBox","SummaryGrid","SummaryBox","App","nationalAverage","useState","basePrice","setBasePrice","taxRate","setTaxRate","monthlyPayment","setMonthlyPayment","taxPayed","setTaxPayed","totalPrice","setTotalPrice","getTotal","Math","round","averageData","labels","datasets","backgroundColor","data","monthlyChartData","Array","from","length","_","i","borderWidth","TaxesPayedData","GithubLink","marginTop","Form","BasePriceInput","newValue","replaceAll","replace","asNumber","isNaN","validateBasePrice","comma","toString","close","newTaxRate","marginBottom","fontSize","transition","transform","opacity","options","maintainAspectRatio","legend","position","align","toFixed","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","abs","FooterView","href","input","GithubLinkStyle","rel","github","footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uLAAe,MAA0B,gC,iBCA1B,MAA0B,wC,OCO1B,SAASA,EAAYC,GA+BhC,OA9BAC,qBAAU,WACN,IAAIC,EAAcC,SAASC,eAAe,gBACtCC,EAAWF,SAASC,eAAT,iBAAkCJ,EAAMM,SACvDC,QAAQC,IAAR,OAAYH,QAAZ,IAAYA,OAAZ,EAAYA,EAAUI,YAEtB,IAAIC,EAAQP,SAASC,eAAe,aAIpC,GAAIO,WAAU,OAACD,QAAD,IAACA,OAAD,EAACA,EAAOE,MAAMC,OAAxB,OAAgCR,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAUI,YAO1C,OALAC,EAAME,MAAMC,KAAZ,iBAAsBR,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAUI,WAAhC,WACAK,YAAW,WAEPJ,EAAME,MAAMG,MAAZ,UAAuBb,EAAYc,aAAZ,OAA0BX,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUI,aAApC,OAAiDJ,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAUY,aAAlF,QACD,KAMPP,EAAME,MAAMG,MAAZ,UAAuBb,EAAYc,aAAZ,OAA0BX,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUI,aAApC,OAAiDJ,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAUY,aAAlF,MACAH,YAAW,WAGPJ,EAAME,MAAMC,KAAZ,iBAAsBR,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAUI,WAAhC,QACD,OAGJ,CAACT,EAAMM,SAEN,eAACY,EAAD,CAAkBC,GAAG,eAArB,UAEI,+BACI,oBAAIA,GAAG,YAAP,SACI,wBAAQC,QAAS,SAAAC,GAAC,OAAIrB,EAAMsB,UAAU,KAAtC,kBAIJ,oBAAIH,GAAG,YAAP,SACI,wBAAQC,QAAS,SAAAC,GAAC,OAAIrB,EAAMsB,UAAU,KAAtC,kBAIJ,oBAAIH,GAAG,YAAP,SACI,wBAAQC,QAAS,SAAAC,GAAC,OAAIrB,EAAMsB,UAAU,KAAtC,kBAIJ,oBAAIH,GAAG,YAAP,SACI,wBAAQC,QAAS,SAAAC,GAAC,OAAIrB,EAAMsB,UAAU,KAAtC,kBAIJ,oBAAIH,GAAG,YAAP,SACI,wBAAQC,QAAS,SAAAC,GAAC,OAAIrB,EAAMsB,UAAU,KAAtC,kBAIJ,oBAAIH,GAAG,YAAP,SACI,wBAAQC,QAAS,SAAAC,GAAC,OAAIrB,EAAMsB,UAAU,KAAtC,kBAIJ,oBAAIH,GAAG,YAAP,SACI,wBAAQC,QAAS,SAAAC,GAAC,OAAIrB,EAAMsB,UAAU,KAAtC,qBAKR,sBAAKH,GAAG,4BAAR,UACI,qBAAKA,GAAG,YAAYI,UAAU,YAA9B,SACKvB,EAAMM,SAEX,qBAAKiB,UAAU,kBAO/B,I,EAAML,EAAmBM,IAAOC,IAAV,o6DCnFP,SAASC,EAAU1B,GAI9B,OACI,eAAC2B,EAAD,WACI,uBAAOC,QAAQ,aAAf,iBACA,sBAAKL,UAAU,cAAf,UACI,uBACIM,KAAK,QACLC,KAAK,aACLX,GAAG,aACHY,KAAM,GACNC,IAAK,IACLC,IAAK,MACLC,MAAOlC,EAAMmC,IACbC,SAAU,SAAAf,GAAC,OAAIrB,EAAMqC,OAAOhB,EAAEiB,OAAOJ,UAEzC,sBAAKX,UAAU,aAAaX,MAAO,CAC/B2B,WAAW,iCAAD,OAAmC,IAAkB,GAAZvC,EAAMmC,IAA/C,4BAA2E,IAAkB,GAAZnC,EAAMmC,IAAvF,iBADd,UAEInC,EAAMmC,IAFV,aAQhB,IAAMR,EAAiBH,IAAOC,IAAV,6vD,QChCL,MAA0B,qC,QCM1B,SAASe,EAAQxC,GAC9B,OACE,sBACEY,MAAO,CACL6B,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,WAAU7C,EAAM8C,IAPlB,UASE,cAAC,IAAD,CAAcC,WAAS,IACvB,qBAAKC,IAAKC,EAAUC,IAAI,eAAeC,MAAO,GAAIvC,MAAO,QClBhD,I,oBAAA,MAA0B,kCC2RzC,IAAMwC,EAAgB5B,IAAOC,IAAV,gRAcb4B,EAAiB7B,IAAO8B,QAAV,0JASdC,EAAc/B,IAAOC,IAAV,wNAUX+B,EAAYhC,IAAOC,IAAV,2WAkBTgC,EAAcjC,IAAOC,IAAV,uMAQXiC,EAAalC,IAAOC,IAAV,2uBAwCDkC,EAjXf,WAEE,IAAMC,EAAkB,IAFX,EAIqBC,mBAAS,GAJ9B,mBAINC,EAJM,KAIKC,EAJL,OAKiBF,mBAAS,MAL1B,mBAKNG,EALM,KAKGC,EALH,OAMeJ,mBAAS,IANxB,mBAMNvD,EANM,KAMEgB,EANF,OAO+BuC,mBAAS,GAPxC,mBAONK,EAPM,KAOUC,EAPV,OAQmBN,mBAAS,GAR5B,mBAQNO,EARM,KAQIC,EARJ,OASuBR,mBAAS,GAThC,mBASNS,EATM,KASMC,EATN,KAmDb,SAASC,IAEP,OAAOC,KAAKC,MAAMZ,GAAa,EAAKE,EAAU,KAAQ1D,EAAS,MAWjEL,qBAAU,WACRsE,EAAcC,KACdH,EATOI,KAAKC,MAAMF,IAAaV,IAU/BK,EANOM,KAAKC,MAAMF,IAAalE,MAO9B,CAACwD,EAAWxD,EAAQ0D,IAGvB,IAAMW,EAAc,CAClBC,OAAQ,CAAC,MAAO,WAChBC,SAAU,CACR,CACEC,gBAAiB,CAAC,UAAW,WAC7BC,KAAM,CAACb,EAAiB,EAAIA,EAAiB,EAAGN,MAIhDoB,EAAmB,CACvBJ,OAAQK,MAAMC,KAAK,CAACC,OAAQ7E,IAAS,SAAC8E,EAAGC,GAAJ,gBAAYA,MACjDR,SAAU,CACR,CAEEE,KAAME,MAAMC,KAAK,CAACC,OAAQ7E,IAAS,SAAC8E,EAAGC,GAAJ,gBAAYf,EAAae,EAAInB,QAGpEoB,YAAa,GAGTC,EAAiB,CACrBX,OAAQ,CAAC,aAAc,SACvBC,SAAU,CACR,CACEC,gBAAiB,CAAC,UAAW,WAC7BC,KAAM,CAACjB,EAAY,EAAIA,EAAY,EAAGM,EAAW,EAAIA,EAAW,KAGpEkB,YAAa,GAGf,OACE,sBAAK/D,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,cAACiE,EAAD,IACA,eAACpC,EAAD,CAAejC,GAAG,iBAAiBP,MAAO,GAA1C,UACE,sBACEO,GAAG,eACHP,MAAO,CACL6E,UAAW,QAHf,UAME,qBACEzC,IAAKb,EACLe,IAAI,GACJtC,MAAO,CACLuC,MAAO,UAGX,wDAEF,qBAAKhC,GAAG,gBAAR,SACE,eAACuE,EAAD,WACE,sBAAKnE,UAAU,gBAAf,UACE,uBAAOK,QAAQ,aAAf,6BACA,cAACY,EAAD,CAASM,IAAI,2FAEf,sBAAKvB,UAAU,aAAaX,MAAO,GAAnC,UACE,cAAC+E,EAAD,CACE9D,KAAK,OACLC,KAAK,aACLX,GAAG,aACHiB,SAAU,SAACf,GAAD,OAvH1B,SAA2BuE,GAMzB,GAAwB,KAHxBA,EAAWA,EAASC,WAAW,IAAK,IAAIC,QAAQ,OAAQ,KAG3CX,OAAb,CAIA,IAAIY,EAAWpF,WAAWiF,GACtBG,EAAW,cACXC,MAAMD,IACVhC,EAAagC,QANXhC,EAAa,GAgHgBkC,CAAkB5E,EAAEiB,OAAOJ,QAC5CA,MAAOgE,IAAMpC,EAAUqC,cAExBrC,EAAY,GACX,qBAAKvC,UAAU,kBAAf,SACE,wBAAQH,QAAS,SAACC,GAAD,OAAO0C,EAAa,IAArC,SACE,qBAAKf,IAAKoD,EAAOlD,IAAI,GAAGC,MAAO,YAMvC,sBAAK5B,UAAU,gBAAf,UACE,uBAAOK,QAAQ,aAAf,oBACA,cAACY,EAAD,CAASM,IAAI,6FAEf,cAAC/C,EAAD,CAAauB,UAAWA,EAAWhB,OAAQA,IAC3C,cAACoB,EAAD,CAAWS,IAAK6B,EAAS3B,OAxGrC,SAAgBgE,GACdpC,EAAWtD,WAAW0F,YA2GhB,eAAC5C,EAAD,WACE,eAACC,EAAD,WACE,qBAAInC,UAAU,aAAd,UAA2B,sBAAMA,UAAU,SAAhB,eAAkC2E,IAAM5B,MACnE,+CAEF,eAACZ,EAAD,WACE,qBAAInC,UAAU,aAAd,UAA2B,sBAAMA,UAAU,SAAhB,eAAkC2E,IAAMhC,MACnE,4CAEF,eAACR,EAAD,WACE,qBAAInC,UAAU,aAAd,UAA2B,sBAAMA,UAAU,SAAhB,eAAkC2E,IAAM9B,MACnE,sDAGJ,qBAAK7C,UAAU,MAAMX,MAAO,GAA5B,6GAMY,IAAdkD,GACA,qBAAKlD,MAAO,CACV0F,aAAc,OACdC,SAAU,QAFZ,4DAOF,cAAClD,EAAD,CACElC,GAAG,kBACHP,MAAO,GAFT,SAKE,eAAC2C,EAAD,CACEpC,GAAG,eACHP,MAAO,CACL4F,WAAW,iBACXC,UAAU,GAAD,OACP3C,EAAY,EAAI,kBAAoB,oBAEtC4C,QAAS5C,EAAY,EAAI,EAAI,GAPjC,UAUE,eAACN,EAAD,WACE,sDACA,cAAC,WAAD,CACEuB,KAAMQ,EACNoB,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CAAEC,SAAU,QAASC,MAAO,YAGxC,sBAAKxF,UAAU,YAAf,0CACgC,IAC7B6C,EAAW,GAAMA,EAAWE,EAAc,KAAK0C,QAAQ,GAAK,EAF/D,+BAMF,eAACxD,EAAD,WACE,yDAA4BlD,EAA5B,aACA,cAAC,OAAD,CACEyE,KAAMC,EACN2B,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CAAEnE,SAAS,SAIzB,eAACc,EAAD,WACE,oDACA,cAAC,MAAD,CACEuB,KAAMJ,EACNgC,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CAAEnE,SAAS,GACnBuE,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTzE,SAAS,KAIf0E,MAAO,CACL,CACEC,MAAO,CAELC,aAAa,GAEfH,UAAW,SAQrB,sBAAK5F,UAAU,YAAf,oCAC0B,IACvBkD,KAAK8C,KACF3D,EAAkBM,GAAkBN,EAAmB,KACzDoD,QAAQ,GAJZ,KAKK9C,EAAiBN,EAAkB,QAAU,SALlD,wCAWN,cAAC4D,EAAD,UACU,4CACW,mBAAGC,KAAK,oCAAR,qBADX,OACsE,mBAAGA,KAAK,+BAAR,kCA4GhF/B,EAAOlE,IAAOC,IAAV,4+BAoDJkE,EAAiBnE,IAAOkG,MAAV,moBAiCpB,SAASlC,IACP,OACE,cAACmC,EAAD,UACE,mBAAGF,KAAK,oCAAoCnF,OAAO,SAASsF,IAAI,aAAhE,SACE,qBAAK5E,IAAK6E,EAAQ3E,IAAI,cAAcC,MAAO,SAKnD,IAAMwE,EAAkBnG,IAAOC,IAAV,sOAWf+F,EAAahG,IAAOsG,OAAV,qLC5dDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvI,SAASC,eAAe,SAM1B2H,K","file":"static/js/main.bd80678c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tax.db94116a.svg\";","export default __webpack_public_path__ + \"static/media/github-link.15fd0c6d.svg\";","import React, { useEffect } from 'react'\n// import {} from 'styled-components/cssprop'\nimport styled from 'styled-components'\ninterface MonthProps {\n    setMonths: (number: number) => void,\n    months: number\n}\nexport default function MonthSelect(props: MonthProps) {\n    useEffect(() => {\n        let containerEl = document.getElementById('month-select')\n        let buttonEl = document.getElementById(`months-${props.months}`)\n        console.log(buttonEl?.offsetLeft)\n        // @ts-ignore\n        let indEl = document.getElementById('indicator')\n\n        // determine order of animations\n        // @ts-ignore\n        if (parseFloat(indEl?.style.left) > buttonEl?.offsetLeft) {\n            // @ts-ignore\n            indEl.style.left = `${buttonEl?.offsetLeft}px`\n            setTimeout(() => {\n                // @ts-ignore\n                indEl.style.right = `${containerEl.clientWidth - buttonEl?.offsetLeft - buttonEl?.offsetWidth}px`\n            }, 200)\n            return\n        }\n\n\n        // @ts-ignore\n        indEl.style.right = `${containerEl.clientWidth - buttonEl?.offsetLeft - buttonEl?.offsetWidth}px`\n        setTimeout(() => {\n\n            // @ts-ignore\n            indEl.style.left = `${buttonEl?.offsetLeft}px`\n        }, 100)\n\n\n    }, [props.months])\n    return (\n        <MonthSelectStyle id=\"month-select\">\n\n            <ul>\n                <li id=\"months-12\">\n                    <button onClick={e => props.setMonths(12)}>\n                        12\n                    </button>\n                </li>\n                <li id=\"months-24\">\n                    <button onClick={e => props.setMonths(24)}>\n                        24\n                    </button>\n                </li>\n                <li id=\"months-36\">\n                    <button onClick={e => props.setMonths(36)}>\n                        36\n                    </button>\n                </li>\n                <li id=\"months-48\">\n                    <button onClick={e => props.setMonths(48)}>\n                        48\n                    </button>\n                </li>\n                <li id=\"months-60\">\n                    <button onClick={e => props.setMonths(60)}>\n                        60\n                    </button>\n                </li>\n                <li id=\"months-72\">\n                    <button onClick={e => props.setMonths(72)}>\n                        72\n                    </button>\n                </li>\n                <li id=\"months-84\">\n                    <button onClick={e => props.setMonths(84)}>\n                        84\n                    </button>\n                </li>\n            </ul>\n            <div id=\"month-indicator-container\">\n                <div id=\"indicator\" className=\"indicator\">\n                    {props.months}\n                </div>\n                <div className=\"numbers\">\n                   \n                </div>\n            </div>\n        </MonthSelectStyle>\n    )\n}\nconst MonthSelectStyle = styled.div`\n    position: relative;\n    background: linear-gradient(to right, #4e2ffc, #862FFC);\n    height: 4rem;\n    border-radius: 2rem;\n    width: 100%;\n    box-shadow: 0 4px 16px rgba(0,0,0,.3);\n    overflow: hidden;\n    margin-bottom: 1rem;\n    ul{\n        display: flex;\n        flex-direction: row;\n        margin: 0;\n        position: relative;\n        list-style: none;\n        height: 100%;\n        align-items: center;\n        justify-content: space-around;\n        padding: 0 12px;\n        li{\n            display: block;\n            font-weight: 700;\n            font-size: 1rem;\n            height: 100%;\n            flex-basis: 1;\n            flex-grow: 1;\n            button{\n                height: 100%;\n                width: 100%;\n                display: flex;\n                border: none;\n                background: none;\n                align-items: center;\n                justify-content: center;\n                color: white;\n                font-weight: 700;\n                font-size: 1rem;\n                cursor: pointer;\n            }\n        }\n\n        \n    }\n    #month-indicator-container{\n            position: absolute;\n            z-index: 1;\n            pointer-events: none;\n            top:0;\n            left:0;\n            bottom:0;\n            right:0;\n            padding: 4px;\n            .indicator{\n                background: white;\n                color: #862FFC;\n                position: absolute;\n                box-shadow: 2px 2px 4px rgba(0,0,0,.3);\n                border-radius: 2rem;\n                top:8px;\n                bottom: 8px;\n                display: flex;\n                font-weight: 700;\n                font-size: 1rem;\n                align-items: center;\n                justify-content: center;\n                transition: left .4s ease-in-out, right .4s  ease-in-out;\n            }\n        }\n`","import React from \"react\"\nimport styled from \"styled-components\"\ninterface Props {\n    setTax: (number: string) => void,\n    tax: number\n}\nexport default function TaxSelect(props: Props) {\n\n    // function to update position of thumb follower element\n\n    return (\n        <TaxSelectStyle>\n            <label htmlFor=\"tax-select\">APR</label>\n            <div className=\"slider-wrap\">\n                <input\n                    type=\"range\"\n                    name=\"tax-select\"\n                    id=\"tax-select\"\n                    step={0.1}\n                    min={0.99}\n                    max={14.99}\n                    value={props.tax}\n                    onChange={e => props.setTax(e.target.value)}\n                />\n                <div className=\"tax-output\" style={{\n                    background: `linear-gradient(to right, hsl(${140 - props.tax * 10}, 72%, 58%), hsl(${110 - props.tax * 10}, 72%, 58%))`\n                }}>{props.tax}%</div>\n            </div>\n\n        </TaxSelectStyle>\n    )\n}\nconst TaxSelectStyle = styled.div`\n  width: 100%;\n  .slider-wrap{\n      display: flex;\n      flex-direction: row;\n  }\n  .tax-output{\n        color: white;\n        text-shadow: 2px 2px 2px rgba(0,0,0,.4);\n        padding: 1rem;\n        box-shadow: 3px 3px 6px rgba(0,0,0,.3);\n        border-radius: 2rem;\n        font-size: 1rem;\n        margin-left: 1rem;\n        font-weight: 800;\n        min-width: 4rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n  input[type=\"range\"] {\n    outline: none;\n    cursor: pointer;\n    :active,\n    :focus {\n      outline: none;\n    }\n    background: transparent;\n    width: 100%;\n    -webkit-appearance: none;\n\n  \n\n    /* TRACK */\n\n    /* webkit */\n    ::-webkit-slider-runnable-track {\n      width: 100%;\n      background-color: rgb(38, 48, 60);\n\n      height: 12px;\n      border-radius: 8px;\n    }\n    ::-webkit-slider-thumb{\n        width: 36px;\n        height: 36px;\n        background: white;\n        border:none;\n    }\n\n    /* mozilla */\n    ::-moz-range-track {\n      width: 100%;\n      background-color: rgb(38, 48, 60);\n\n      height: 12px;\n      border-radius: 8px;\n    }\n    ::-moz-range-progress {\n      background: #862ffc;\n      height: 100%;\n      border-radius: 8px;\n      height: 12px;\n    }\n    ::-moz-range-thumb{\n        width: 36px;\n        height: 36px;\n        box-shadow: 3px 3px 8px rgba(0,0,0,.4);\n        border-radius: 100%;\n        background: linear-gradient(to top right, #bbb, #fff);\n        border:none;\n        position: relative;\n        \n    }\n\n\n\n    /* ms */\n    ::-ms-fill-lower {\n      background: #862ffc;\n      height: 100%;\n      border-radius: 8px;\n      height: 12px;\n\n    }\n\n   \n  }\n`\n","export default __webpack_public_path__ + \"static/media/question.fdc220cc.svg\";","import React from \"react\"\nimport question from \"./question.svg\"\nimport ReactTooltip from \"react-tooltip\"\ninterface Props {\n  tip: string\n}\nexport default function TipIcon(props: Props) {\n  return (\n    <div\n      style={{\n        height: \"20px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n      data-tip={props.tip}\n    >\n      <ReactTooltip multiline></ReactTooltip>\n      <img src={question} alt=\"tooltip-icon\" width={20} style={{}} />\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/close.2f92e606.svg\";","import React, { useState, useEffect } from \"react\"\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\nimport styled from \"styled-components\"\nimport * as Formula from \"./formula/formula\"\nimport tax from \"./tax.svg\"\nimport comma from \"comma-number\"\nimport github from \"./github-link.svg\"\nimport MonthSelect from \"./MonthSelect\"\nimport TaxSelect from \"./TaxSelect\"\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\"\nimport TipIcon from \"./TipIcon\"\nimport close from \"./close.svg\"\nfunction App() {\n  // constants\n  const nationalAverage = 563\n  // state\n  const [basePrice, setBasePrice] = useState(0)\n  const [taxRate, setTaxRate] = useState(1.99)\n  const [months, setMonths] = useState(60)\n  const [monthlyPayment, setMonthlyPayment] = useState(0)\n  const [taxPayed, setTaxPayed] = useState(0)\n  const [totalPrice, setTotalPrice] = useState(0)\n\n  // input validation\n\n  // base price\n  function validateBasePrice(newValue: string) {\n    // save cursor position\n    // remove leading zeros, commas, and parse into float number\n    newValue = newValue.replaceAll(\",\", \"\").replace(/^0+/g, \"\")\n    // return if number too high\n    // if input is emptied, replace with 0\n    if (newValue.length === 0) {\n      setBasePrice(0)\n      return\n    }\n    let asNumber = parseFloat(newValue)\n    if (asNumber > 999999999999) return\n    if (isNaN(asNumber)) return\n    setBasePrice(asNumber)\n  }\n\n  // months\n  function validateMonths(monthString: string) {\n    if (monthString.length === 0 || monthString === \"0\") {\n      setMonths(0)\n      return\n    }\n    let asNumber = parseFloat(monthString)\n    if (isNaN(asNumber)) return\n    setMonths(asNumber)\n  }\n\n  function monthBlur(e: React.FormEvent<EventTarget>) {\n    let target = e.target as HTMLInputElement\n    if (target.value === \"0\") setMonths(1)\n  }\n\n  function setTax(newTaxRate: string) {\n    setTaxRate(parseFloat(newTaxRate))\n  }\n\n  // calculations\n  function getTotal() {\n    // formula for accrued total (principle + interest) A = P(1 + rt)\n    return Math.round(basePrice * (1 + (taxRate / 100) * (months / 12)))\n  }\n  function getTaxPayed() {\n    // I = A - P\n    return Math.round(getTotal() - basePrice)\n  }\n  function getMonthly() {\n    // pymnt(month) = A / months\n    return Math.round(getTotal() / months)\n  }\n  // callback on user inputs to recalculate outputs\n  useEffect(() => {\n    setTotalPrice(getTotal())\n    setTaxPayed(getTaxPayed())\n    setMonthlyPayment(getMonthly())\n  }, [basePrice, months, taxRate])\n\n  // chart data\n  const averageData = {\n    labels: [\"You\", \"Average\"],\n    datasets: [\n      {\n        backgroundColor: [\"#4e2ffc\", \"#862FFC\"],\n        data: [monthlyPayment > 0 ? monthlyPayment : 1, nationalAverage],\n      },\n    ],\n  }\n  const monthlyChartData = {\n    labels: Array.from({length: months}, (_, i)=> `${i}`),\n    datasets: [\n      {\n        // backgroundColor: [\"#2ffc4a\", \"#862FFC\"],\n        data: Array.from({length: months}, (_, i)=> `${totalPrice - i * monthlyPayment}`),\n      },\n    ],\n    borderWidth: 3\n    \n  }\n  const TaxesPayedData = {\n    labels: [\"Base Price\", \"Taxes\"],\n    datasets: [\n      {\n        backgroundColor: [\"#2ffc4a\", \"#862FFC\"],\n        data: [basePrice > 0 ? basePrice : 1, taxPayed > 0 ? taxPayed : 1],\n      },\n    ],\n    borderWidth: 3,\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <GithubLink></GithubLink>\n        <HeaderContent id=\"header-content\" style={{}}>\n          <div\n            id=\"header-intro\"\n            style={{\n              marginTop: \"4rem\",\n            }}\n          >\n            <img\n              src={tax}\n              alt=\"\"\n              style={{\n                width: \"80px\",\n              }}\n            />\n            <h2>Car Loan Calculator</h2>\n          </div>\n          <div id=\"input-section\">\n            <Form>\n              <div className=\"label-wrapper\">\n                <label htmlFor=\"base-price\">Loan Amount ($)</label>\n                <TipIcon tip=\"This should be the amount of the loan, not the total price of the vehicle purchase.\"></TipIcon>\n              </div>\n              <div className=\"input-wrap\" style={{}}>\n                <BasePriceInput\n                  type=\"text\"\n                  name=\"base-price\"\n                  id=\"base-price\"\n                  onChange={(e) => validateBasePrice(e.target.value)}\n                  value={comma(basePrice.toString())}\n                />\n                {basePrice > 0 && (\n                  <div className=\"abs-button-wrap\">\n                    <button onClick={(e) => setBasePrice(0)}>\n                      <img src={close} alt=\"\" width={16} />\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"label-wrapper\">\n                <label htmlFor=\"base-price\">Months</label>\n                <TipIcon tip=\"Duration of the loan in months. The average new loan duration in the US is 67 months.\"></TipIcon>\n              </div>\n              <MonthSelect setMonths={setMonths} months={months}></MonthSelect>\n              <TaxSelect tax={taxRate} setTax={setTax}></TaxSelect>\n            </Form>\n          </div>\n          {/* @ts-ignore */}\n          <SummaryGrid>\n            <SummaryBox>\n              <h2 className=\"stat-large\"><span className=\"dollar\">$</span>{comma(totalPrice)}</h2>\n              <h4>Total Cost</h4>\n            </SummaryBox>\n            <SummaryBox>\n              <h2 className=\"stat-large\"><span className=\"dollar\">$</span>{comma(monthlyPayment)}</h2>\n              <h4>Monthly</h4>\n            </SummaryBox>\n            <SummaryBox>\n              <h2 className=\"stat-large\"><span className=\"dollar\">$</span>{comma(taxPayed)}</h2>\n              <h4>Taxes and Fees</h4>\n            </SummaryBox>\n          </SummaryGrid>\n          <div className=\"tag\" style={{}}>\n            *All values are estimates and should only be used as but part of\n            your car shopping research.\n          </div>\n        </HeaderContent>\n        {\n        basePrice === 0  &&\n        <div style={{\n          marginBottom: \"1rem\",\n          fontSize: '1rem'\n        }}>Enter a base price to view price breakdown.</div>\n      }\n      </header>\n      \n      <OutputsWrapper\n        id=\"outputs-wrapper\"\n        style={{\n        }}\n      >\n        <OutputsGrid\n          id=\"outputs-grid\"\n          style={{\n            transition: `all .2s linear`,\n            transform: `${\n              basePrice > 0 ? \"translateY(0px)\" : \"translateY(10px)\"\n            }`,\n            opacity: basePrice > 0 ? 1 : 0,\n          }}\n        >\n          <OutputBox>\n            <h2>Taxes and Fees Payed</h2>\n            <Doughnut\n              data={TaxesPayedData}\n              options={{\n                maintainAspectRatio: true,\n                legend: { position: \"right\", align: \"start\" },\n              }}\n            />\n            <div className=\"subheader\">\n              Taxes and Fees contributed to{\" \"}\n              {taxPayed > 0 ? ((taxPayed / totalPrice) * 100).toFixed(0) : 0}%\n              of the overall cost.\n            </div>\n          </OutputBox>\n          <OutputBox>\n            <h2>Remaining Balance Over {months} Months</h2>\n            <Line\n              data={monthlyChartData}\n              options={{\n                maintainAspectRatio: true,\n                legend: { display: false },\n              }}\n            />\n          </OutputBox>\n          <OutputBox>\n            <h2>Versus USA Average</h2>\n            <Bar\n              data={averageData}\n              options={{\n                maintainAspectRatio: true,\n                legend: { display: false },\n                scales: {\n                  xAxes: [\n                    {\n                      gridLines: {\n                        display: false,\n                      },\n                    },\n                  ],\n                  yAxes: [\n                    {\n                      ticks: {\n                        // display: false,\n                        beginAtZero: true\n                      },\n                      gridLines: {\n                        // display: false,\n                      },\n                    },\n                  ],\n                },\n              }}\n            />\n            <div className=\"subheader\">\n              Your average payment is{\" \"}\n              {Math.abs(\n                ((nationalAverage - monthlyPayment) / nationalAverage) * 100\n              ).toFixed(0)}\n              % {monthlyPayment < nationalAverage ? \"lower\" : \"higher\"} than the\n              national average\n            </div>\n          </OutputBox>\n        </OutputsGrid>\n      </OutputsWrapper>\n      <FooterView>\n                <div>\n                  Built in <a href=\"https://github.com/facebook/react\">ReactJS</a> by <a href=\"https://github.com/jakermate\">Jake Miller</a>\n                </div>\n      </FooterView>\n    </div>\n  )\n}\nconst HeaderContent = styled.div`\n  width: 100%;\n  padding: 1rem;\n  display: flex;\n  box-sizing: border-box;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  .tag {\n    margin-bottom: 8rem;\n    font-size: 0.6rem;\n    color: #b3bcd0;\n  }\n`\nconst OutputsWrapper = styled.section`\n  padding: 1rem;\n  @media(min-width: 420px){\n    padding: 2rem;\n  }\n  @media(min-width: 720px){\n    padding: 4rem;\n  }\n`\nconst OutputsGrid = styled.div`\n  margin: -8rem auto 0 auto;\n  display: grid;\n  grid-gap: 2rem;\n  max-width: 1280px;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n\n  /* justify-items: center; */\n`\n\nconst OutputBox = styled.div`\n  background: white;\n  border-radius: 2rem;\n  padding: 2rem;\n  /* min-width: 220px; */\n  position: relative;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  h2 {\n    margin: 0 0 2rem 0;\n    text-align: left;\n    font-weight: bold;\n  }\n  .subheader {\n    margin-top: 1.6rem;\n    font-weight: 500;\n    color: #454850;\n  }\n`\nconst SummaryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(100px, 150px));\n  margin-top: 4rem;\n  grid-gap: 0.6rem;\n  margin-bottom: 2rem;\n  justify-content: center;\n`\nconst SummaryBox = styled.div`\n  min-height: 10px;\n  background: #384052;\n  border-radius: 8px;\n  display: flex;\n  overflow: hidden;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  padding: 1rem 0.5rem;\n  .dollar{\n    color: #acb6ce;\n    font-size: 1rem;\n    /* display: inline-block; */\n  }\n  h2.stat-large {\n    margin: 0;\n    font-size: 1.6rem;\n    font-weight: 700;\n  }\n  h4 {\n    font-size: 0.7rem;\n    color: #8997bb;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin: 0.6rem 0 0 0;\n  }\n  @media (max-width: 520px) {\n    h2.stat-large {\n      font-size: 1rem;\n    }\n    h4 {\n      font-size: 0.5rem;\n    }\n  }\n  @media (min-width: 520px) {\n    padding: 1rem;\n  }\n`\n\nexport default App\n\n// style\nconst Form = styled.div`\n  flex-direction: column;\n  display: flex;\n  justify-content: start;\n  text-align: left;\n  min-width: 320px;\n  max-width: 420px;\n  @media (min-width: 640px) {\n    min-width: 400px;\n  }\n  label {\n    font-weight: 500;\n    font-size: 1rem;\n    color: #a1b8f3;\n  }\n  .label-wrapper {\n    margin: 0 0 1rem 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    img {\n      opacity: 0.5;\n      background: none;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n  .input-wrap {\n    position: relative;\n    margin-bottom: 1rem;\n  }\n  .abs-button-wrap {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n\n    justify-content: center;\n    align-items: center;\n    button {\n      padding: .4rem;\n      margin-right: 1rem;\n      background: none;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n`\nconst BasePriceInput = styled.input`\n  width: 100%;\n  padding: 1rem 1.4rem;\n  box-sizing: border-box;\n  background-color: rgb(49, 64, 82);\n  color: white;\n  border-radius: 2rem;\n  font-size: 1.3rem;\n  font-weight: 500;\n  :focus{\n    background: rgb(36, 50, 68);\n    box-shadow: 0 0px 16px rgb(68, 136, 224);\n  }\n  outline: none;\n  border: none;\n  /* color: #b7adec; */\n  ::before {\n    content: \"hi\";\n  }\n  ::active,\n  :focus {\n    outline: none;\n  }\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  &[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n`\n\nfunction GithubLink() {\n  return (\n    <GithubLinkStyle>\n      <a href=\"https://github.com/jakermate/loan\" target=\"_blank\" rel=\"noreferrer\">\n        <img src={github} alt=\"github-icon\" width={80} />\n      </a>\n    </GithubLinkStyle>\n  )\n}\nconst GithubLinkStyle = styled.div`\n  position: absolute;\n  top: 0;\n  transition: all 0.12s cubic-bezier(0.68, -0.6, 0.32, 1.6);\n  right: 0;\n  background-color: none;\n  :hover {\n    transform: translate(-6px, 6px) scale(1.2);\n  }\n`\n\nconst FooterView = styled.footer`\n  padding: 4rem 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  a{\n    text-decoration: none;\n    font-weight: bold;\n  }\n`","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}