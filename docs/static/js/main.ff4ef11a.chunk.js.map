{"version":3,"sources":["tax.svg","github-link.svg","MonthSelect.tsx","TaxSelect.tsx","close.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MonthSelect","props","useEffect","window","addEventListener","restyle","removeEventListener","throttle","console","log","containerEl","document","getElementById","buttonEl","months","offsetLeft","indEl","parseFloat","style","left","setTimeout","right","clientWidth","offsetWidth","MonthSelectStyle","id","onClick","e","setMonths","className","styled","div","TaxSelect","TaxSelectStyle","htmlFor","type","name","step","min","max","value","tax","onChange","setTax","target","background","HeaderContent","OutputsWrapper","section","OutputsGrid","OutputBox","SummaryContainer","SummaryGrid","SummaryBox","App","nationalAverage","useState","basePrice","setBasePrice","taxRate","setTaxRate","monthlyPayment","setMonthlyPayment","taxPayed","setTaxPayed","totalPrice","setTotalPrice","getTotal","Math","round","averageData","labels","datasets","backgroundColor","data","monthlyChartData","Array","from","length","_","i","borderWidth","TaxesPayedData","GithubLink","marginTop","src","alt","width","Form","fontSize","marginBottom","fontWeight","InputSection","BasePriceInput","newValue","replaceAll","replace","asNumber","isNaN","validateBasePrice","close","Hint","hint","newTaxRate","comma","transition","transform","opacity","options","maintainAspectRatio","legend","position","align","toFixed","Placeholder","display","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","abs","InfoSection","FooterView","href","input","GithubLinkStyle","rel","github","footer","HintPara","p","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff4ef11a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tax.db94116a.svg\";","export default __webpack_public_path__ + \"static/media/github-link.15fd0c6d.svg\";","import React, { useEffect } from 'react'\n// import {} from 'styled-components/cssprop'\nimport styled from 'styled-components'\nimport throttle from 'lodash/throttle'\ninterface MonthProps {\n    setMonths: (number: number) => void,\n    months: number\n}\nexport default function MonthSelect(props: MonthProps) {\n    useEffect(()=>{\n        window.addEventListener('resize', restyle)\n        return () =>{\n            window.removeEventListener('resize', restyle)\n        }\n    })\n    const restyle = throttle(restyleThing, 400)\n    function restyleThing(){\n        console.log('call')\n        let containerEl = document.getElementById('month-select')\n        let buttonEl = document.getElementById(`months-${props.months}`)\n        console.log(buttonEl?.offsetLeft)\n        // @ts-ignore\n        let indEl = document.getElementById('indicator')\n        // determine order of animations\n        // @ts-ignore\n        if (parseFloat(indEl?.style.left) > buttonEl?.offsetLeft) {\n            // @ts-ignore\n            indEl.style.left = `${buttonEl?.offsetLeft}px`\n            setTimeout(() => {\n                // @ts-ignore\n                indEl.style.right = `${containerEl.clientWidth - buttonEl?.offsetLeft - buttonEl?.offsetWidth}px`\n            }, 200)\n            return\n        }\n        // @ts-ignore\n        indEl.style.right = `${containerEl.clientWidth - buttonEl?.offsetLeft - buttonEl?.offsetWidth}px`\n        setTimeout(() => {\n            // @ts-ignore\n            indEl.style.left = `${buttonEl?.offsetLeft}px`\n        }, 100)\n\n    }\n    useEffect(() => {\n        let containerEl = document.getElementById('month-select')\n        let buttonEl = document.getElementById(`months-${props.months}`)\n        console.log(buttonEl?.offsetLeft)\n        // @ts-ignore\n        let indEl = document.getElementById('indicator')\n\n        // determine order of animations\n        // @ts-ignore\n        if (parseFloat(indEl?.style.left) > buttonEl?.offsetLeft) {\n            // @ts-ignore\n            indEl.style.left = `${buttonEl?.offsetLeft}px`\n            setTimeout(() => {\n                // @ts-ignore\n                indEl.style.right = `${containerEl.clientWidth - buttonEl?.offsetLeft - buttonEl?.offsetWidth}px`\n            }, 200)\n            return\n        }\n        // @ts-ignore\n        indEl.style.right = `${containerEl.clientWidth - buttonEl?.offsetLeft - buttonEl?.offsetWidth}px`\n        setTimeout(() => {\n            // @ts-ignore\n            indEl.style.left = `${buttonEl?.offsetLeft}px`\n        }, 100)\n    }, [props.months])\n    return (\n        <MonthSelectStyle id=\"month-select\" >\n\n            <ul>\n                <li id=\"months-12\">\n                    <button onClick={e => props.setMonths(12)}>\n                        12\n                    </button>\n                </li>\n                <li id=\"months-24\">\n                    <button onClick={e => props.setMonths(24)}>\n                        24\n                    </button>\n                </li>\n                <li id=\"months-36\">\n                    <button onClick={e => props.setMonths(36)}>\n                        36\n                    </button>\n                </li>\n                <li id=\"months-48\">\n                    <button onClick={e => props.setMonths(48)}>\n                        48\n                    </button>\n                </li>\n                <li id=\"months-60\">\n                    <button onClick={e => props.setMonths(60)}>\n                        60\n                    </button>\n                </li>\n                <li id=\"months-72\">\n                    <button onClick={e => props.setMonths(72)}>\n                        72\n                    </button>\n                </li>\n                <li id=\"months-84\">\n                    <button onClick={e => props.setMonths(84)}>\n                        84\n                    </button>\n                </li>\n            </ul>\n            <div id=\"month-indicator-container\">\n                <div id=\"indicator\" className=\"indicator\">\n                    {props.months}\n                </div>\n                <div className=\"numbers\">\n                   \n                </div>\n            </div>\n        </MonthSelectStyle>\n    )\n}\nconst MonthSelectStyle = styled.div`\n    position: relative;\n    background: linear-gradient(to right, #4e2ffc, #862FFC);\n    height: 52px;\n    border-radius: 2rem;\n    width: 100%;\n    box-shadow: 0 4px 16px rgba(0,0,0,.3);\n    overflow: hidden;\n    /* margin-bottom: 1rem; */\n    ul{\n        display: flex;\n        flex-direction: row;\n        margin: 0;\n        position: relative;\n        list-style: none;\n        height: 100%;\n        align-items: center;\n        justify-content: space-around;\n        padding: 0 12px;\n        li{\n            display: block;\n            font-weight: 700;\n            font-size: 1rem;\n            height: 100%;\n            flex-basis: 1;\n            flex-grow: 1;\n            button{\n                height: 100%;\n                width: 100%;\n                display: flex;\n                border: none;\n                background: none;\n                align-items: center;\n                justify-content: center;\n                color: white;\n                font-weight: 700;\n                font-size: 1rem;\n                cursor: pointer;\n                :hover{\n                    color: #222;\n                }\n                :active, :focus{\n                    outline: none;\n                }\n            }\n        }\n\n        \n    }\n    #month-indicator-container{\n            position: absolute;\n            z-index: 1;\n            pointer-events: none;\n            top:0;\n            left:0;\n            bottom:0;\n            right:0;\n            padding: 4px;\n            .indicator{\n                background: white;\n                color: #862FFC;\n                position: absolute;\n                box-shadow: 2px 2px 4px rgba(0,0,0,.3);\n                border-radius: 2rem;\n                top:8px;\n                bottom: 8px;\n                display: flex;\n                font-weight: 700;\n                font-size: 1rem;\n                align-items: center;\n                justify-content: center;\n                transition: left .4s ease-in-out, right .4s  ease-in-out;\n            }\n        }\n`","import React from \"react\"\nimport styled from \"styled-components\"\ninterface Props {\n    setTax: (number: string) => void,\n    tax: number\n}\nexport default function TaxSelect(props: Props) {\n\n    // function to update position of thumb follower element\n\n    return (\n        <TaxSelectStyle>\n            <label htmlFor=\"tax-select\">APR</label>\n            <div className=\"slider-wrap\">\n                <input\n                    type=\"range\"\n                    name=\"tax-select\"\n                    id=\"tax-select\"\n                    step={0.1}\n                    min={0.99}\n                    max={14.99}\n                    value={props.tax}\n                    onChange={e => props.setTax(e.target.value)}\n                />\n                <div className=\"tax-output\" style={{\n                    background: `linear-gradient(to right, hsl(${140 - props.tax * 10}, 72%, 58%), hsl(${110 - props.tax * 10}, 72%, 58%))`\n                }}>{props.tax}%</div>\n            </div>\n\n        </TaxSelectStyle>\n    )\n}\nconst TaxSelectStyle = styled.div`\n  width: 100%;\n  \n  .slider-wrap{\n      display: flex;\n      flex-direction: row;\n  height: 52px;\n\n  }\n  .tax-output{\n        color: white;\n        text-shadow: 2px 2px 2px rgba(0,0,0,.4);\n        padding: 1rem;\n        box-shadow: 3px 3px 6px rgba(0,0,0,.3);\n        border-radius: 2rem;\n        font-size: 1rem;\n        margin-left: 1rem;\n        font-weight: 800;\n        min-width: 4rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n  input[type=\"range\"] {\n    outline: none;\n    cursor: pointer;\n    :active,\n    :focus {\n      outline: none;\n    }\n    background: transparent;\n    width: 100%;\n    -webkit-appearance: none;\n\n  \n\n    /* TRACK */\n\n    /* webkit */\n    ::-webkit-slider-runnable-track {\n      width: 100%;\n      background-color: rgb(38, 48, 60);\n\n      height: 12px;\n      border-radius: 8px;\n    }\n    ::-webkit-slider-thumb{\n        -webkit-appearance: none;\n        width: 36px;\n        height: 36px;\n        transform: translateY(-10px);\n        box-shadow: 3px 3px 8px rgba(0,0,0,.4);\n        border-radius: 100%;\n        background: linear-gradient(to top right, #bbb, #fff);\n        border:none;\n        position: relative;\n    }\n\n    /* mozilla */\n    ::-moz-range-track {\n      width: 100%;\n      background-color: rgb(38, 48, 60);\n\n      height: 12px;\n      border-radius: 8px;\n    }\n    ::-moz-range-progress {\n      background: #862ffc;\n      height: 100%;\n      border-radius: 8px;\n      height: 12px;\n    }\n    ::-moz-range-thumb{\n        width: 36px;\n        height: 36px;\n        box-shadow: 3px 3px 8px rgba(0,0,0,.4);\n        border-radius: 100%;\n        background: linear-gradient(to top right, #bbb, #fff);\n        border:none;\n        position: relative;\n        \n    }\n\n\n\n    /* ms */\n    ::-ms-fill-lower {\n      background: #862ffc;\n      height: 100%;\n      border-radius: 8px;\n      height: 12px;\n\n    }\n\n   \n  }\n`\n","export default __webpack_public_path__ + \"static/media/close.2f92e606.svg\";","import React, { useState, useEffect } from \"react\"\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\nimport styled from \"styled-components\"\nimport * as Formula from \"./formula/formula\"\nimport tax from \"./tax.svg\"\nimport comma from \"comma-number\"\nimport github from \"./github-link.svg\"\nimport MonthSelect from \"./MonthSelect\"\nimport TaxSelect from \"./TaxSelect\"\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\"\nimport TipIcon from \"./TipIcon\"\nimport close from \"./close.svg\"\nfunction App() {\n  // constants\n  const nationalAverage = 563\n  // state\n  const [basePrice, setBasePrice] = useState(0)\n  const [taxRate, setTaxRate] = useState(1.99)\n  const [months, setMonths] = useState(60)\n  const [monthlyPayment, setMonthlyPayment] = useState(0)\n  const [taxPayed, setTaxPayed] = useState(0)\n  const [totalPrice, setTotalPrice] = useState(0)\n\n  // input validation\n\n  // base price\n  function validateBasePrice(newValue: string) {\n    // save cursor position\n    // remove leading zeros, commas, and parse into float number\n    newValue = newValue.replaceAll(\",\", \"\").replace(/^0+/g, \"\")\n    // return if number too high\n    // if input is emptied, replace with 0\n    if (newValue.length === 0) {\n      setBasePrice(0)\n      return\n    }\n    let asNumber = parseFloat(newValue)\n    if (asNumber > 999999999999) return\n    if (isNaN(asNumber)) return\n    setBasePrice(asNumber)\n  }\n\n  // months\n  function validateMonths(monthString: string) {\n    if (monthString.length === 0 || monthString === \"0\") {\n      setMonths(0)\n      return\n    }\n    let asNumber = parseFloat(monthString)\n    if (isNaN(asNumber)) return\n    setMonths(asNumber)\n  }\n\n  function monthBlur(e: React.FormEvent<EventTarget>) {\n    let target = e.target as HTMLInputElement\n    if (target.value === \"0\") setMonths(1)\n  }\n\n  function setTax(newTaxRate: string) {\n    setTaxRate(parseFloat(newTaxRate))\n  }\n\n  // calculations\n  function getTotal() {\n    // formula for accrued total (principle + interest) A = P(1 + rt)\n    return Math.round(basePrice * (1 + (taxRate / 100) * (months / 12)))\n  }\n  function getTaxPayed() {\n    // I = A - P\n    return Math.round(getTotal() - basePrice)\n  }\n  function getMonthly() {\n    // pymnt(month) = A / months\n    return Math.round(getTotal() / months)\n  }\n  // callback on user inputs to recalculate outputs\n  useEffect(() => {\n    setTotalPrice(getTotal())\n    setTaxPayed(getTaxPayed())\n    setMonthlyPayment(getMonthly())\n  }, [basePrice, months, taxRate])\n\n  // chart data\n  const averageData = {\n    labels: [\"You\", \"Average\"],\n    datasets: [\n      {\n        backgroundColor: [\"#4e2ffc\", \"#862FFC\"],\n        data: [monthlyPayment > 0 ? monthlyPayment : 1, nationalAverage],\n      },\n    ],\n  }\n  const monthlyChartData = {\n    labels: Array.from({ length: months }, (_, i) => `${i}`),\n    datasets: [\n      {\n        // backgroundColor: [\"#2ffc4a\", \"#862FFC\"],\n        data: Array.from({ length: months }, (_, i) => `${totalPrice - i * monthlyPayment}`),\n      },\n    ],\n    borderWidth: 3\n\n  }\n  const TaxesPayedData = {\n    labels: [\"Base Price\", \"Taxes\"],\n    datasets: [\n      {\n        backgroundColor: [\"#2ffc4a\", \"#862FFC\"],\n        data: [basePrice > 0 ? basePrice : 1, taxPayed > 0 ? taxPayed : 1],\n      },\n    ],\n    borderWidth: 3,\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <GithubLink></GithubLink>\n        <HeaderContent id=\"header-content\" style={{}}>\n          <div\n            id=\"header-intro\"\n            style={{\n              marginTop: \"4rem\",\n            }}\n          >\n            <img\n              src={tax}\n              alt=\"\"\n              style={{\n                width: \"80px\",\n              }}\n            />\n            <h2 className=\"title\">Car Loan Calculator</h2>\n            <p className=\"subtitle\">Estimate your monthly payment and total interest payed.</p>\n          </div>\n          <div id=\"input-section\">\n\n            <Form>\n              <div style={{\n                fontSize: \"1rem\",\n                marginBottom: '2rem',\n                fontWeight: 700\n              }}>\n                Enter a loan amount to get started.\n                <hr/>\n            </div>\n              {/* Base Price */}\n              <InputSection>\n                <div className=\"label-wrapper\">\n                  <label htmlFor=\"base-price\">Loan Amount ($)</label>\n                  {/* <TipIcon tip=\"This should be the amount of the loan, not the total price of the vehicle purchase.\"></TipIcon> */}\n                </div>\n                <BasePriceInput\n                  type=\"text\"\n                  name=\"base-price\"\n                  id=\"base-price\"\n                  onChange={(e) => validateBasePrice(e.target.value)}\n                  value={basePrice}\n                />\n                {basePrice > 0 && (\n                  <div className=\"abs-button-wrap\">\n                    <button onClick={(e) => setBasePrice(0)}>\n                      <img src={close} alt=\"\" width={16} />\n                    </button>\n                  </div>\n                )}\n                <Hint hint={\"This is the price of the car you are purchasing, minus your down payment amount.\"}></Hint>\n\n              </InputSection>\n\n              {/* Month Selection */}\n              <InputSection>\n\n              <div className=\"label-wrapper\">\n                  <label htmlFor=\"base-price\">Months</label>\n                  {/* <TipIcon tip=\"Duration of the loan in months. The average new loan duration in the US is 67 months. Loan periods of 72 or more months are usually only available as incentives on new car purchases.\"></TipIcon> */}\n                </div>\n                <MonthSelect setMonths={setMonths} months={months}></MonthSelect>\n                <Hint hint={\"It's best not to take a loan longer than 36 months for used cars, and 60 months for new cars.  The longer your loan duration, the more you will pay in interest beyond the price of the car.\"}></Hint>\n              </InputSection>\n\n              {/* TaxSelection */}\n              <InputSection>\n                <TaxSelect tax={taxRate} setTax={setTax}></TaxSelect>\n                <Hint hint={\"New car purchases typically incentivise their purchase by offering lower interest rates than you can typically get on a used car purchase.  This will be partially based upon your credit score.\"}></Hint>\n\n              </InputSection>\n            </Form>\n          </div>\n          {/* @ts-ignore */}\n          <SummaryContainer>\n            <h2>\n              Purchase Summary\n            </h2>\n          <SummaryGrid>\n            <SummaryBox>\n              <h2 className=\"stat-large\"><span className=\"dollar\">$</span>{comma(totalPrice)}</h2>\n              <h4>Total Cost</h4>\n            </SummaryBox>\n            <SummaryBox>\n              <h2 className=\"stat-large\"><span className=\"dollar\">$</span>{comma(monthlyPayment)}</h2>\n              <h4>Monthly</h4>\n            </SummaryBox>\n            <SummaryBox>\n              <h2 className=\"stat-large\"><span className=\"dollar\">$</span>{comma(taxPayed)}</h2>\n              <h4>Taxes and Fees</h4>\n            </SummaryBox>\n          </SummaryGrid>\n          </SummaryContainer>\n          <div className=\"tag\" style={{}}>\n            *All values are estimates and should only be used as but part of\n            your car shopping research.\n          </div>\n        </HeaderContent>\n        {\n          basePrice === 0 &&\n          <div style={{\n            marginBottom: \"1rem\",\n            fontSize: '1rem'\n          }}>Enter a base price to view price breakdown.</div>\n        }\n      </header>\n\n      <OutputsWrapper\n        id=\"outputs-wrapper\"\n        style={{\n        }}\n      >\n        <OutputsGrid\n          id=\"outputs-grid\"\n          style={{\n            transition: `all .2s linear`,\n            transform: `${basePrice > 0 ? \"translateY(0px)\" : \"translateY(10px)\"\n              }`,\n            opacity: basePrice > 0 ? 1 : 0,\n          }}\n        >\n          <OutputBox>\n            {\n              basePrice > 0 ?\n                <div className=\"box-content-wrap\">\n                  <h2>Taxes and Fees Payed</h2>\n                  <Doughnut\n                    data={TaxesPayedData}\n                    options={{\n                      maintainAspectRatio: true,\n                      legend: { position: \"right\", align: \"start\" },\n                    }}\n                  />\n                  <div className=\"subheader\">\n                    Taxes and Fees contributed to{\" \"}\n                    {taxPayed > 0 ? ((taxPayed / totalPrice) * 100).toFixed(0) : 0}%\n              of the overall cost.\n            </div>\n                </div>\n                :\n                <Placeholder></Placeholder>\n\n            }\n\n\n          </OutputBox>\n          <OutputBox>\n            {\n              basePrice > 0 ?\n                <div className=\"box-content-wrap\">\n                  <h2>Remaining Balance Over {months} Months</h2>\n                  <Line\n                    data={monthlyChartData}\n                    options={{\n                      maintainAspectRatio: true,\n                      legend: { display: false },\n                    }}\n                  />\n                </div>\n                :\n                <Placeholder></Placeholder>\n            }\n\n\n          </OutputBox>\n          <OutputBox>\n            {\n              basePrice > 0 ?\n                <div className=\"box-content-wrap\">\n                  <h2>Versus USA Average</h2>\n                  <Bar\n                    data={averageData}\n                    options={{\n                      maintainAspectRatio: true,\n                      legend: { display: false },\n                      scales: {\n                        xAxes: [\n                          {\n                            gridLines: {\n                              display: false,\n                            },\n                          },\n                        ],\n                        yAxes: [\n                          {\n                            ticks: {\n                              // display: false,\n                              beginAtZero: true\n                            },\n                            gridLines: {\n                              // display: false,\n                            },\n                          },\n                        ],\n                      },\n                    }}\n                  />\n                  <div className=\"subheader\">\n                    Your average payment is{\" \"}\n                    {Math.abs(\n                      ((nationalAverage - monthlyPayment) / nationalAverage) * 100\n                    ).toFixed(0)}\n              % {monthlyPayment < nationalAverage ? \"lower\" : \"higher\"} than the\n              national average\n            </div>\n                </div>\n                :\n                <Placeholder></Placeholder>\n            }\n\n\n          </OutputBox>\n        </OutputsGrid>\n      </OutputsWrapper>\n      <InfoSection>\n        <div>\n\n        <h2>How to use the loan calculator.</h2>\n          <p>While this aims to help you in your car shopping, please note that there a many hidden costs and fees that may or may not apply to your purchase.</p>\n          <p>Some examples:</p>\n          <ul>\n            <li>Delivery Fee</li>\n            <li>Title, License, or Registration Fees</li>\n            <li>Local Taxes</li>\n          </ul>\n          <p>As a result, it's impossible for this calulator to account for everything you may be charged while purchasing a vehicle.</p>\n        </div>\n        <div>\n          <h2>About Auto Loans</h2>\n          <p>This is where you learn about auto loans.</p>\n          <p>You'll learn more here.</p>\n        </div>\n        <div>\n          <h2>New vs. Used</h2>\n          <p>This is where you learn about auto loans.</p>\n          <p>You'll learn more here.</p>\n        </div>\n      </InfoSection>\n      <FooterView>\n        <div>\n          Built in <a href=\"https://github.com/facebook/react\">ReactJS</a> by <a href=\"https://github.com/jakermate\">Jake Miller</a>\n        </div>\n        <div className=\"copy\">&copy; 2021</div>\n      </FooterView>\n    </div>\n  )\n}\nconst HeaderContent = styled.div`\n  width: 100%;\n  padding: 1rem;\n  display: flex;\n  box-sizing: border-box;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  .title{\n    margin-bottom: 0rem !important;\n  }\n  .subtitle{\n    font-size: 1rem;\n    margin: 1rem 0 2rem 0 ;\n  }\n  .tag {\n    margin-bottom: 8rem;\n    font-size: 0.6rem;\n    color: #b3bcd0;\n  }\n`\nconst OutputsWrapper = styled.section`\n  padding: 1rem;\n  @media(min-width: 420px){\n    padding: 2rem;\n  }\n  /* @media(min-width: 720px){\n    padding: 4rem;\n  } */\n`\nconst OutputsGrid = styled.div`\n  margin: -8rem auto 0 auto;\n  display: grid;\n  grid-gap: 2rem;\n  max-width: 1280px;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n\n  /* justify-items: center; */\n`\n\nconst OutputBox = styled.div`\n  background: white;\n  border-radius: 2rem;\n  padding: 2rem;\n  /* min-width: 220px; */\n  position: relative;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  h2 {\n    margin: 0 0 2rem 0;\n    text-align: left;\n    font-weight: bold;\n  }\n  .subheader {\n    margin-top: 1.6rem;\n    font-weight: 500;\n    color: #454850;\n  }\n  .box-content-wrap{\n    width: 100%;\n    height: 100%;\n  }\n`\nconst SummaryContainer = styled.div`\n box-shadow: 0 4px 16px -4px rgba(0,0,0,.3);\n  background: rgba(100,100,100,.1);\n  padding: 1rem;\n  border-radius: 16px;\n  margin-top: 2rem;\n\n  margin-bottom: 2rem;\n  h2{\n  margin: 0;\n  font-size: 1.7rem;\n  font-weight: 800;\n  margin-bottom: 1rem;\n}\n\n`\nconst SummaryGrid = styled.div`\n\n  display: grid;\n  grid-template-columns: repeat(3, minmax(100px, 150px));\n  grid-gap: 0.6rem;\n  justify-content: center;\n \n`\nconst SummaryBox = styled.div`\n  min-height: 10px;\n  background: #384052;\n  border-radius: 8px;\n  display: flex;\n  overflow: hidden;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  padding: 1rem 0.5rem;\n  .dollar{\n    color: #acb6ce;\n    font-size: 1rem;\n    /* display: inline-block; */\n  }\n  h2.stat-large {\n    margin: 0;\n    font-size: 1.6rem;\n    font-weight: 700;\n  }\n  h4 {\n    font-size: 0.7rem;\n    color: #8997bb;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin: 0.6rem 0 0 0;\n  }\n  @media (max-width: 520px) {\n    h2.stat-large {\n      font-size: 1rem;\n    }\n    h4 {\n      font-size: 0.5rem;\n    }\n  }\n  @media (min-width: 520px) {\n    padding: 1rem;\n  }\n`\n\nexport default App\n\n// style\nconst Form = styled.div`\n  flex-direction: column;\n  display: flex;\n  justify-content: start;\n  text-align: left;\n  min-width: 320px;\n  max-width: 420px;\n  box-shadow: 0 4px 16px -4px rgba(0,0,0,.3);\n  background: rgba(100,100,100,.1);\n  padding: 1.5rem 1rem;\n  border-radius: 16px;\n  @media (min-width: 640px) {\n    min-width: 400px;\n  }\n  label {\n    font-weight: 600;\n    font-size: 1rem;\n    color: #b7c6ee;\n  }\n  .label-wrapper {\n    margin: 0 0 .7rem 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    img {\n      opacity: 0.5;\n      background: none;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n  .input-wrap {\n    position: relative;\n    margin-bottom: 1rem;\n  }\n  .abs-button-wrap {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n\n    justify-content: center;\n    align-items: center;\n    button {\n      padding: .4rem;\n      margin-right: 1rem;\n      background: none;\n      border: none;\n      transition: all .1s linear;\n      :hover{\n        transform: scale(1.2);\n      }\n      outline: none;\n      cursor: pointer;\n    }\n  }\n`\nconst BasePriceInput = styled.input`\n  width: 100%;\n  padding: 1rem 1.4rem;\n  box-sizing: border-box;\n  background-color: rgb(49, 64, 82);\n  color: white;\n  height: 52px;\n  border-radius: 2rem;\n  font-size: 1.3rem;\n  font-weight: 600;\n  :focus{\n    background: rgb(36, 50, 68);\n    box-shadow: 0 0px 16px rgb(68, 136, 224);\n  }\n  outline: none;\n  border: none;\n  /* color: #b7adec; */\n  ::before {\n    content: \"hi\";\n  }\n  ::active,\n  :focus {\n    outline: none;\n  }\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  &[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n`\n\nfunction GithubLink() {\n  return (\n    <GithubLinkStyle>\n      <a href=\"https://github.com/jakermate/loan\" target=\"_blank\" rel=\"noreferrer\">\n        <img src={github} alt=\"github-icon\" width={80} />\n      </a>\n    </GithubLinkStyle>\n  )\n}\nconst GithubLinkStyle = styled.div`\n  position: absolute;\n  top: 0;\n  transition: all 0.12s cubic-bezier(0.68, -0.6, 0.32, 1.6);\n  right: 0;\n  background-color: none;\n  :hover {\n    transform: translate(-6px, 6px) scale(1.2);\n  }\n`\n\nconst InfoSection = styled.section`\n  max-width: 840px;\n  text-align: left;\n  margin: 0 auto;\n  padding: 0 1rem;\n  \n  @media(min-width: 1024px){\n    padding: 0;\n  }\n  h2{\n    margin: 2rem 0;\n    font-weight: 900;\n    font-size: 2rem;\n  }\n  p{\n\n  }\n`\n\nconst FooterView = styled.footer`\n  padding: 4rem 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  background: linear-gradient(to bottom, #212a3d, #1a2335);\n  color: white;\n\n  .copy{\n    font-size: 10px;\n    margin-top: .4rem;\n  }\n  a{\n    text-decoration: none;\n    font-weight: bold;\n    :visited{\n      color: white;\n    }\n  }\n`\n\nfunction Placeholder() {\n  return (\n    <div>\n\n    </div>\n  )\n}\n\nfunction Hint(props: any) {\n  return (\n    <HintPara>\n      {props.hint}\n    </HintPara>\n  )\n}\nconst HintPara = styled.p`\n  /* margin-top: 8px; */\n  font-size: 12px;\n  color: #a1b8f3;\n`\nconst InputSection = styled.div`\n  margin-bottom: 1.5rem;\n  position: relative;\n`","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}